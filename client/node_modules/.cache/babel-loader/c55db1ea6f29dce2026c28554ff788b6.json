{"ast":null,"code":"var _jsxFileName = \"/Users/francescocolonnese/Desktop/java_calc/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Header, Grid, Button, Segment, Checkbox, Modal, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nconst op_map = {\n  \"PLUS\": \"+\",\n  \"SUBTRACT\": \"-\",\n  \"MULTIPLY\": \"*\",\n  \"DIVIDE\": \"/\"\n};\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggle = () => {\n      this.setState({\n        mode: !this.state.mode\n      });\n    };\n\n    this.handleSimpleOp = o => {\n      const _this$state = this.state,\n            curr = _this$state.curr,\n            prev = _this$state.prev;\n      prev === \"\" ? this.setState({\n        prev: curr,\n        curr: \"\",\n        op: o\n      }) : this.setState({\n        op: o\n      });\n    };\n\n    this.handleComplexCompute = async o => {\n      const curr = this.state.curr;\n      const rawResponse = await fetch(\"http://localhost:8080/calc?exp=_\" + o + '!' + curr);\n      const json = await rawResponse.json();\n      this.setState({\n        curr: json.result\n      });\n    };\n\n    this.handleSimpleCompute = async () => {\n      const _this$state2 = this.state,\n            curr = _this$state2.curr,\n            prev = _this$state2.prev,\n            op = _this$state2.op;\n      const rawResponse = await fetch(\"http://localhost:8080/calc?exp=\" + prev + '!' + op + \"$\" + curr);\n      const json = await rawResponse.json();\n      this.setState({\n        curr: json.result,\n        prev: \"\",\n        op: \"\"\n      });\n    };\n\n    this.handleMLine = e => {\n      console.log(e.target.value);\n    };\n\n    this.handleBLine = e => {\n      console.log(e.target.value);\n    };\n\n    this.handleLine = async () => {\n      const _this$state3 = this.state,\n            m_line = _this$state3.m_line,\n            b_line = _this$state3.b_line;\n      const rawResponse = await fetch(\"http://localhost:8080/linetool?m=\" + m_line + '&b=' + b_line);\n      const json = await rawResponse.json();\n      let new_array = [];\n\n      for (let i in json) {\n        new_array.push({\n          y: json[i]\n        });\n      }\n\n      this.setState({\n        line_points: new_array\n      });\n    };\n\n    this.handleNumber = n => {\n      const curr = this.state.curr;\n\n      if (curr !== \"0\") {\n        this.setState({\n          curr: curr + n\n        });\n      } else {\n        this.setState({\n          curr: n\n        });\n      }\n    };\n\n    this.state = {\n      mode: false,\n      curr: \"0\",\n      op: \"\",\n      prev: \"\",\n      line_points: [{\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }, {\n        y: 1\n      }],\n      m_line: 1,\n      b_line: 0\n    };\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          curr = _this$state4.curr,\n          prev = _this$state4.prev,\n          op = _this$state4.op,\n          mode = _this$state4.mode,\n          line_points = _this$state4.line_points,\n          m_line = _this$state4.m_line,\n          b_line = _this$state4.b_line;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      size: \"massive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, prev !== \"\" ? prev + \" \" + op_map[op] + \" \" + curr : curr)), React.createElement(Grid, {\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"1\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"1\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"2\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"2\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"3\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"3\")))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"4\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"4\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"5\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"5\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"6\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"6\")))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"7\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"7\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"8\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"8\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"9\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"9\")))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: () => {\n        this.handleNumber(\"0\");\n      },\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"0\"))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          curr: \"0\",\n          prev: \"\"\n        });\n      },\n      color: \"red\",\n      size: \"massive\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"CANC\")))), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      toggle: true,\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), !mode && React.createElement(Grid, {\n      style: {\n        paddingTop: 20\n      },\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      color: \"red\",\n      onClick: () => {\n        this.handleSimpleOp(\"PLUS\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"+\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      color: \"yellow\",\n      onClick: () => {\n        this.handleSimpleOp(\"SUBTRACT\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"-\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleSimpleOp(\"MULTIPLY\");\n      },\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"*\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleSimpleOp(\"DIVIDE\");\n      },\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"/\")))), mode && prev !== \"\" && React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \" Darn! You can't access complex functions when working on an expression.\"), mode && prev === \"\" && React.createElement(Grid, {\n      style: {\n        paddingTop: 20\n      },\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"SIN\");\n      },\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"sin\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"COS\");\n      },\n      color: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"cos\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"TAN\");\n      },\n      color: \"blue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"tan\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"LOG\");\n      },\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"log\"))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"SQUARE\");\n      },\n      color: \"violet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"x^2\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"CUBE\");\n      },\n      color: \"brown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"x^3\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: () => {\n        this.handleComplexCompute(\"SQRT\");\n      },\n      color: \"pink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"sqrt\")), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        fluid: true,\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"line tool\"),\n      closeIcon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"archive\",\n      content: \"Archive Old Messages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      style: {\n        paddingTop: 20\n      },\n      columns: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Coefficient\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Bias\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Button, {\n      fluid: true,\n      onClick: this.handleLine,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Compute Line\")))), React.createElement(LineChart, {\n      className: \"App\",\n      style: {\n        paddingTop: 20\n      },\n      width: 600,\n      height: 300,\n      data: line_points,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(Line, {\n      type: \"monotone\",\n      dataKey: \"y\",\n      stroke: \"#f4440e\",\n      activeDot: {\n        r: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })))))))), React.createElement(\"div\", {\n      style: {\n        padding: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"massive\",\n      onClick: this.handleSimpleCompute,\n      color: \"teal\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"=\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/francescocolonnese/Desktop/java_calc/client/src/App.js"],"names":["React","Component","Header","Grid","Button","Segment","Checkbox","Modal","Input","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","op_map","App","constructor","props","handleToggle","setState","mode","state","handleSimpleOp","o","curr","prev","op","handleComplexCompute","rawResponse","fetch","json","result","handleSimpleCompute","handleMLine","e","console","log","target","value","handleBLine","handleLine","m_line","b_line","new_array","i","push","y","line_points","handleNumber","n","render","padding","paddingTop","top","right","left","bottom","r"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport {Header, Grid, Button, Segment, Checkbox, Modal, Input} from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst op_map = {\"PLUS\": \"+\", \"SUBTRACT\": \"-\", \"MULTIPLY\": \"*\", \"DIVIDE\": \"/\"}\n\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      mode: false,\n      curr: \"0\",\n      op: \"\",\n      prev: \"\",\n      line_points: [{y: 1},{y: 1},{y: 1},{y: 1},{y: 1},\n                    {y: 1},{y: 1},{y: 1},{y: 1},{y: 1},\n                    {y: 1},{y: 1},{y: 1},{y: 1},{y: 1},\n                    {y: 1},{y: 1},{y: 1},{y: 1},{y: 1}],\n      m_line: 1,\n      b_line: 0\n    }\n\n  }\n\n  handleToggle = () => {\n    this.setState({\n      mode: !this.state.mode\n    })\n  }\n  handleSimpleOp = (o) => {\n    const {curr, prev} = this.state\n    prev === \"\" ?\n    this.setState({\n      prev: curr,\n      curr: \"\",\n      op: o\n    }) :  this.setState({ op: o})\n\n  }\n\n  handleComplexCompute = async (o) => {\n    const {curr} = this.state\n    const rawResponse = await fetch(\"http://localhost:8080/calc?exp=_\" + o + '!' + curr)\n    const json = await rawResponse.json()\n    this.setState({\n      curr: json.result\n    })\n  }\n\n  handleSimpleCompute = async () =>{\n    const {curr, prev, op} = this.state;\n    const rawResponse = await fetch(\"http://localhost:8080/calc?exp=\" + prev + '!' + op + \"$\" + curr)\n    const json = await rawResponse.json()\n    this.setState({\n      curr: json.result, \n      prev: \"\",\n      op: \"\"\n    })\n  }\n\n  handleMLine = e => { console.log(e.target.value); }\n  handleBLine = e => { console.log(e.target.value); }\n\n\n  handleLine = async () => {\n    const {m_line, b_line} = this.state;\n    const rawResponse = await fetch(\"http://localhost:8080/linetool?m=\" + m_line + '&b=' + b_line)\n    const json = await rawResponse.json()\n    let new_array = []\n    \n    for (let i in json){\n      new_array.push({y: json[i]})\n    }\n\n    this.setState({\n      line_points: new_array\n    })\n  }\n\n  handleNumber = (n) => {\n    const {curr} = this.state;\n    if (curr !== \"0\"){\n      this.setState({\n        curr: curr + n \n      })\n    }\n    else {\n      this.setState({\n        curr: n\n      })\n    }\n  }\n\n  render() {\n    const {curr, prev, op, mode, line_points, m_line, b_line} = this.state\n    return (\n      <div className=\"App\">\n        <Segment size=\"massive\" >\n          <Header>{prev !== \"\" ? prev + \" \" + op_map[op] + \" \" + curr : curr}</Header>\n        </Segment>\n        <Grid columns={3}>\n          <Grid.Row>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"1\")}} fluid>1</Button>\n              </div>\n            </Grid.Column>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"2\")}} fluid>2</Button>\n              </div>       \n            </Grid.Column>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"3\")}} fluid>3</Button>\n              </div>   \n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"4\")}} fluid>4</Button>\n              </div>  \n            </Grid.Column>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"5\")}} fluid>5</Button>\n              </div>             \n            </Grid.Column>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"6\")}} fluid>6</Button>\n              </div>      \n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"7\")}} fluid>7</Button>\n              </div>  \n            </Grid.Column>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"8\")}} fluid>8</Button>\n              </div>              \n            </Grid.Column>\n            <Grid.Column>\n              <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"9\")}} fluid>9</Button>\n              </div> \n            </Grid.Column>\n            \n          </Grid.Row>\n          <Grid.Column></Grid.Column>\n          <Grid.Column>\n            <div style={{padding: 10}}>\n                <Button size=\"massive\" onClick={() => {this.handleNumber(\"0\")}} fluid>0</Button>\n              </div>\n            </Grid.Column>\n            <Grid.Column>\n            <div style={{padding: 10}}>\n                <Button onClick={()=> {this.setState({curr: \"0\", prev: \"\"})}} color=\"red\" size=\"massive\" fluid>CANC</Button>\n              </div>\n            </Grid.Column>\n        </Grid>\n        <Segment>\n        <Checkbox toggle onClick={this.handleToggle} />\n        { !mode && <Grid style={{paddingTop: 20}} columns={4}>\n          <Grid.Row>\n              <Grid.Column>\n                <Button fluid color=\"red\" onClick={() => {this.handleSimpleOp(\"PLUS\")}} >+</Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid color=\"yellow\" onClick={() => {this.handleSimpleOp(\"SUBTRACT\")}}>-</Button>           \n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleSimpleOp(\"MULTIPLY\")}} color=\"blue\">*</Button>   \n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleSimpleOp(\"DIVIDE\")}} color=\"green\">/</Button>   \n              </Grid.Column>\n          </Grid.Row>\n        </Grid>\n        }\n        {mode && prev !== \"\" && <Header> Darn! You can't access complex functions when working on an expression.</Header>}\n        { (mode && prev === \"\") && <Grid style={{paddingTop: 20}} columns={4}>\n          <Grid.Row>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"SIN\")}} color=\"red\">sin</Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"COS\")}} color=\"yellow\">cos</Button>            \n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"TAN\")}} color=\"blue\">tan</Button>   \n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"LOG\")}} color=\"green\">log</Button>   \n              </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"SQUARE\")}} color=\"violet\">x^2</Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"CUBE\")}} color=\"brown\">x^3</Button>            \n              </Grid.Column>\n              <Grid.Column>\n                <Button fluid onClick={() => {this.handleComplexCompute(\"SQRT\")}} color=\"pink\">sqrt</Button>   \n              </Grid.Column>\n              <Grid.Column>\n              <Modal trigger={<Button fluid color=\"grey\">line tool</Button>} closeIcon>\n                <Header icon='archive' content='Archive Old Messages' />\n                <Modal.Content>\n                <Grid style={{paddingTop: 20}} columns={3}>\n                  <Grid.Row>\n                    <Grid.Column>\n                      <Input placeholder='Coefficient' />\n                    </Grid.Column>\n                    <Grid.Column>\n                      <Input placeholder='Bias' />     \n                    </Grid.Column>\n                    <Grid.Column>\n                      <Button fluid onClick={this.handleLine} color=\"red\">Compute Line</Button> \n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                  <LineChart\n                    className=\"App\"\n                    style={{paddingTop: 20}}\n                    width={600}\n                    height={300}\n                    data={line_points}\n                    margin={{\n                      top: 5, right: 30, left: 20, bottom: 5,\n                    }}\n                  >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey=\"y\" stroke=\"#f4440e\" activeDot={{ r: 8 }} />\n                  </LineChart>\n                </Modal.Content>\n              </Modal>\n              \n              </Grid.Column>\n              </Grid.Row>\n          </Grid>\n        }\n        </Segment>\n        \n        <div style={{padding: 10}}>\n          <Button size=\"massive\" onClick={this.handleSimpleCompute} color=\"teal\" fluid>=</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}